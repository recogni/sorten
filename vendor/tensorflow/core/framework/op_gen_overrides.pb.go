// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/framework/op_gen_overrides.proto

package tensorflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Used to override the default API & behavior in the generated code
// for client languages, from what you would get from the OpDef alone.
// This is so we can evolve the API while remaining backwards
// compatible when interpretting old graphs.  Overrides go in an
// "op_gen_overrides.pbtxt" file with a text-format OpGenOverrides
// message.  Right now these only apply to the C++ API.
// TODO(josh11b): In the future there will be a common set of overrides
// and per-client-language overrides.
//
// WARNING: Be *very* careful using these features -- these overrides
// can change the semantics of existing code.  These changes may need
// to wait until a major release of TensorFlow to avoid breaking our
// compatibility promises.
type OpGenOverride struct {
	// Name of the op to apply overrides to.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Do not include this op in the generated API.
	// If `skip` is true, all other overrides are ignored for this op.
	Skip bool `protobuf:"varint,2,opt,name=skip" json:"skip,omitempty"`
	// Hide this op by putting it into an internal namespace (or whatever
	// is appropriate in the target language).
	Hide bool `protobuf:"varint,3,opt,name=hide" json:"hide,omitempty"`
	// Use a different name in the API than the op's name. Note that
	// the op's name in `backticks` will also be replaced in the docs.
	RenameTo string `protobuf:"bytes,4,opt,name=rename_to,json=renameTo" json:"rename_to,omitempty"`
	// Create *additional* API endpoints with different names (contrast
	// with rename_to, which affects the original name).
	Alias        []string                     `protobuf:"bytes,5,rep,name=alias" json:"alias,omitempty"`
	AttrDefault  []*OpGenOverride_AttrDefault `protobuf:"bytes,6,rep,name=attr_default,json=attrDefault" json:"attr_default,omitempty"`
	AttrRename   []*OpGenOverride_Rename      `protobuf:"bytes,7,rep,name=attr_rename,json=attrRename" json:"attr_rename,omitempty"`
	InputRename  []*OpGenOverride_Rename      `protobuf:"bytes,8,rep,name=input_rename,json=inputRename" json:"input_rename,omitempty"`
	OutputRename []*OpGenOverride_Rename      `protobuf:"bytes,9,rep,name=output_rename,json=outputRename" json:"output_rename,omitempty"`
}

func (m *OpGenOverride) Reset()                    { *m = OpGenOverride{} }
func (m *OpGenOverride) String() string            { return proto.CompactTextString(m) }
func (*OpGenOverride) ProtoMessage()               {}
func (*OpGenOverride) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *OpGenOverride) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OpGenOverride) GetSkip() bool {
	if m != nil {
		return m.Skip
	}
	return false
}

func (m *OpGenOverride) GetHide() bool {
	if m != nil {
		return m.Hide
	}
	return false
}

func (m *OpGenOverride) GetRenameTo() string {
	if m != nil {
		return m.RenameTo
	}
	return ""
}

func (m *OpGenOverride) GetAlias() []string {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *OpGenOverride) GetAttrDefault() []*OpGenOverride_AttrDefault {
	if m != nil {
		return m.AttrDefault
	}
	return nil
}

func (m *OpGenOverride) GetAttrRename() []*OpGenOverride_Rename {
	if m != nil {
		return m.AttrRename
	}
	return nil
}

func (m *OpGenOverride) GetInputRename() []*OpGenOverride_Rename {
	if m != nil {
		return m.InputRename
	}
	return nil
}

func (m *OpGenOverride) GetOutputRename() []*OpGenOverride_Rename {
	if m != nil {
		return m.OutputRename
	}
	return nil
}

// Map the name of an attr to a new default value to use.  This
// default will be used when creating new graphs, as opposed to the
// default in the OpDef, which will be used when interpreting old
// GraphDefs.  If this attr is also renamed (using attr_rename
// below), use the original name of the attr.
type OpGenOverride_AttrDefault struct {
	Name  string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *AttrValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *OpGenOverride_AttrDefault) Reset()                    { *m = OpGenOverride_AttrDefault{} }
func (m *OpGenOverride_AttrDefault) String() string            { return proto.CompactTextString(m) }
func (*OpGenOverride_AttrDefault) ProtoMessage()               {}
func (*OpGenOverride_AttrDefault) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0, 0} }

func (m *OpGenOverride_AttrDefault) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OpGenOverride_AttrDefault) GetValue() *AttrValue {
	if m != nil {
		return m.Value
	}
	return nil
}

// Change the name used to access attrs/inputs/outputs in the API
// from what is used in the GraphDef.  Note that these names in
// `backticks` will also be replaced in the docs.
type OpGenOverride_Rename struct {
	From string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To   string `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
}

func (m *OpGenOverride_Rename) Reset()                    { *m = OpGenOverride_Rename{} }
func (m *OpGenOverride_Rename) String() string            { return proto.CompactTextString(m) }
func (*OpGenOverride_Rename) ProtoMessage()               {}
func (*OpGenOverride_Rename) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0, 1} }

func (m *OpGenOverride_Rename) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *OpGenOverride_Rename) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type OpGenOverrides struct {
	Op []*OpGenOverride `protobuf:"bytes,1,rep,name=op" json:"op,omitempty"`
}

func (m *OpGenOverrides) Reset()                    { *m = OpGenOverrides{} }
func (m *OpGenOverrides) String() string            { return proto.CompactTextString(m) }
func (*OpGenOverrides) ProtoMessage()               {}
func (*OpGenOverrides) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *OpGenOverrides) GetOp() []*OpGenOverride {
	if m != nil {
		return m.Op
	}
	return nil
}

func init() {
	proto.RegisterType((*OpGenOverride)(nil), "tensorflow.OpGenOverride")
	proto.RegisterType((*OpGenOverride_AttrDefault)(nil), "tensorflow.OpGenOverride.AttrDefault")
	proto.RegisterType((*OpGenOverride_Rename)(nil), "tensorflow.OpGenOverride.Rename")
	proto.RegisterType((*OpGenOverrides)(nil), "tensorflow.OpGenOverrides")
}

func init() { proto.RegisterFile("tensorflow/core/framework/op_gen_overrides.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x6b, 0xf2, 0x40,
	0x10, 0xc6, 0x49, 0x8c, 0xbe, 0x66, 0xa2, 0x1e, 0x96, 0xf7, 0x85, 0x7d, 0xed, 0x25, 0x08, 0x85,
	0xf4, 0x0f, 0xb1, 0xd8, 0x63, 0x4f, 0xd2, 0x96, 0xf6, 0x54, 0x61, 0x29, 0xbd, 0x86, 0x6d, 0xdd,
	0xb4, 0xc1, 0x98, 0x59, 0x36, 0x1b, 0xfd, 0x24, 0xfd, 0xbe, 0x65, 0x77, 0x15, 0x15, 0x2a, 0x78,
	0x7b, 0x66, 0x32, 0xcf, 0x6f, 0xe7, 0x61, 0x02, 0x37, 0x5a, 0x54, 0x35, 0xaa, 0xbc, 0xc4, 0xf5,
	0xf8, 0x03, 0x95, 0x18, 0xe7, 0x8a, 0x2f, 0xc5, 0x1a, 0xd5, 0x62, 0x8c, 0x32, 0xfb, 0x14, 0x55,
	0x86, 0x2b, 0xa1, 0x54, 0x31, 0x17, 0x75, 0x2a, 0x15, 0x6a, 0x24, 0xb0, 0x73, 0x0c, 0x2f, 0x8f,
	0xbb, 0xb9, 0xd6, 0x2a, 0x5b, 0xf1, 0xb2, 0x11, 0xce, 0x37, 0xfa, 0x0e, 0xa0, 0x3f, 0x93, 0x4f,
	0xa2, 0x9a, 0x6d, 0x80, 0x84, 0x40, 0x50, 0xf1, 0xa5, 0xa0, 0x5e, 0xec, 0x25, 0x21, 0xb3, 0xda,
	0xf4, 0xea, 0x45, 0x21, 0xa9, 0x1f, 0x7b, 0x49, 0x97, 0x59, 0x6d, 0x7a, 0x5f, 0xc5, 0x5c, 0xd0,
	0x96, 0xeb, 0x19, 0x4d, 0xce, 0x20, 0x54, 0xc2, 0x38, 0x32, 0x8d, 0x34, 0xb0, 0x80, 0xae, 0x6b,
	0xbc, 0x22, 0xf9, 0x0b, 0x6d, 0x5e, 0x16, 0xbc, 0xa6, 0xed, 0xb8, 0x95, 0x84, 0xcc, 0x15, 0xe4,
	0x19, 0x7a, 0x76, 0xa9, 0xb9, 0xc8, 0x79, 0x53, 0x6a, 0xda, 0x89, 0x5b, 0x49, 0x34, 0x39, 0x4f,
	0x77, 0x19, 0xd2, 0x83, 0xfd, 0xd2, 0xa9, 0xd6, 0xea, 0xc1, 0x0d, 0xb3, 0x88, 0xef, 0x0a, 0x32,
	0x05, 0x5b, 0x66, 0xee, 0x41, 0xfa, 0xc7, 0x82, 0xe2, 0xe3, 0x20, 0x66, 0xe7, 0x18, 0x18, 0x93,
	0xd3, 0xe4, 0x1e, 0x7a, 0x45, 0x25, 0x1b, 0xbd, 0x65, 0x74, 0x4f, 0x64, 0x44, 0xd6, 0xb5, 0x81,
	0x3c, 0x42, 0x1f, 0x1b, 0xbd, 0x47, 0x09, 0x4f, 0xa4, 0xf4, 0x9c, 0xcd, 0x55, 0xc3, 0x17, 0x88,
	0xf6, 0xa2, 0xfe, 0x7a, 0x96, 0x2b, 0x68, 0xdb, 0x5b, 0xda, 0xbb, 0x44, 0x93, 0x7f, 0xfb, 0x2f,
	0x18, 0xef, 0x9b, 0xf9, 0xc8, 0xdc, 0xcc, 0xf0, 0x1a, 0x3a, 0x9b, 0x05, 0x09, 0x04, 0xb9, 0xc2,
	0xe5, 0x16, 0x65, 0x34, 0x19, 0x80, 0xaf, 0xd1, 0x72, 0x42, 0xe6, 0x6b, 0x1c, 0xdd, 0xc1, 0xe0,
	0x60, 0xc7, 0x9a, 0x5c, 0x80, 0x8f, 0x92, 0x7a, 0x36, 0xcb, 0xff, 0xa3, 0x59, 0x98, 0x8f, 0xf2,
	0xbd, 0x63, 0xff, 0xad, 0xdb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xa6, 0x27, 0xa6, 0xc7,
	0x02, 0x00, 0x00,
}
